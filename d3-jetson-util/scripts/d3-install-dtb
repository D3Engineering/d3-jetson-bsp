#!/bin/bash
#
# A simple script to simplify writing a signed DTB to the correct partition
# This will show all dtbs in /usr/lib/(selected kernel)/ that do not start with
# "tegra". "tegra*" dtbs are assumed to be from Nvidia.
#
# Copyright (c) 2019-2020, D3 Engineering.  All rights reserved.

set -o errexit
set -o pipefail
shopt -s extglob

[[ -t 0 && -t 1 ]] || { echo "Can't run - not on a terminal" ; exit ; }

function pr() {
    echo -ne "\e[34m[d3-install-dtb]\e[39m "
    printf "%s" "$@"
    echo
}

ROOT_DTB_DIR="/usr/lib"
cd $ROOT_DTB_DIR

pr "Choose an installed D3 BSP release"
select LIMAGE in ./linux-image*; do
    test -n "$LIMAGE" && break
    pr "Select a valid d3 bsp kernel release"
done

DTB_DIR="$ROOT_DTB_DIR/$LIMAGE"

cd "$DTB_DIR" # cd for the sake of select output

IFS=,
declare -a DTB_ARR_RAW
declare -a DTB_ARR
declare -a DTB_ARR_UNENCRYPT

# Text between 'DESC' markers is the names of the products that each
# DTB corresponds to
shopt -s nullglob
files=(./!(tegra*)+(.dtb.encrypt))
shopt -u nullglob

if [[ "${#files[@]}" -lt 1 ]]; then
    echo "No DTB files found in $DTB_DIR" 1>&2
    exit 1
fi

for file in "${files[@]}" ; do
    DTB_ARR_RAW+=("$file")
    unencrypt=$(sed -E 's/\.encrypt$|_sigheader//g' <<<"$file")
    DTB_ARR_UNENCRYPT+=("$unencrypt")
    DTB_ARR+=("$(strings < "$file" | grep -P 'DESC<[^>]+>DESC' \
	    | sed 's/[>]*DESC[<]*//g') ($(sed -E 's/^\.\///g' <<<"$unencrypt"))")
done

pr "Choose a dtb to install"
select DTB in "${DTB_ARR[@]}"; do
    test -n "$DTB" && break
    pr "Select a valid signed dtb"
done

selected="${DTB_ARR_UNENCRYPT[$REPLY-1]}"
if ln -f "$selected" /boot/active-dtb; then
    echo -e "[d3-install-dtb] \e[32mkernel-dtb has been selected! (file $selected)\e[39m"
else
    echo -e "[d3-install-dtb] \e[31mfailed to link dtb! (file $selected)\e[39m"
fi
